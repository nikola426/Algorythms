"""
Алгоритм Монте-Карло — это метод, основанный на случайной выборке, который используется для решения различных
математических и статистических задач. Он применяется в таких областях, как интегрирование, моделирование, анализ рисков
и многое другое.
В этом примере мы будем использовать метод Монте-Карло для оценки определенного интеграла функции f(x) на интервале
[a,b].
"""


import random

def f(x):
    """Пример функции для интегрирования."""
    return x ** 2  # Например, f(x) = x^2

def monte_carlo_integration(func, a, b, num_samples):
    """Оценка интеграла функции func на интервале [a, b] методом Монте-Карло."""
    total = 0.0

    for _ in range(num_samples):
        # Генерация случайной точки x в интервале [a, b]
        x = random.uniform(a, b)
        total += func(x)

    # Площадь под графиком функции
    area = (b - a) * (total / num_samples)
    return area

# Пример использования
if __name__ == "__main__":
    a = 0  # Начало интервала
    b = 1  # Конец интервала
    num_samples = 100000  # Количество случайных выборок

    estimated_integral = monte_carlo_integration(f, a, b, num_samples)
    print(f"Оценка интеграла f(x) от {a} до {b}: {estimated_integral}")
